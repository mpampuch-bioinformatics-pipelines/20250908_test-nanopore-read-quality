// TODO nf-core: Once you have added the required tests, please run the following command to build this file:
// nf-core subworkflows test yakqc
nextflow_workflow {

    name "Test Subworkflow YAKQC"
    script "../main.nf"
    workflow "YAKQC"

    tag "subworkflows"
    tag "subworkflows_"
    tag "subworkflows/yakqc"
    // TODO nf-core: Add tags for all modules used within this subworkflow. Example:
    tag "samtools"
    tag "samtools/sort"
    tag "samtools/index"


    // TODO nf-core: Change the test name preferably indicating the test-data and file-format used
    test("sarscov2 - fastq - paired_end") {

        when {
            workflow {
                """
                // YAKQC expects a samplesheet channel with: [meta, ilmn_fastq1, ilmn_fastq2, ont_fastq, pb_fastq]
                input[0] = [
                    [ id:'test' ], // meta map
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true), // ilmn_fastq1
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_2.fastq.gz', checkIfExists: true), // ilmn_fastq2
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true), // ont_fastq (placeholder)
                    file(params.modules_testdata_base_path + 'genomics/sarscov2/illumina/fastq/test_1.fastq.gz', checkIfExists: true)  // pb_fastq (placeholder)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert workflow.success},
                { assert snapshot(workflow.out).match()}
                //TODO nf-core: Add all required assertions to verify the test output.
            )
        }
    }
}
